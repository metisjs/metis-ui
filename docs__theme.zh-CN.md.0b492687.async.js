"use strict";(self.webpackChunkmetis_ui=self.webpackChunkmetis_ui||[]).push([[491],{11786:function(e,n,a){a.r(n);a(37496),a(82857),a(91238),a(83120),a(48415),a(95300),a(11024),a(65110),a(10006),a(18637),a(741),a(30166);var r=a(91512),t=a(35055),l=a(30158),s=a(39546),i=a(95633),d=a(74132);n.default=function(){return(0,d.jsx)(t.DumiPage,{children:(0,d.jsx)(s.Suspense,{fallback:(0,d.jsx)(l.Z,{}),children:(0,d.jsx)(d.Fragment,{children:(0,d.jsxs)("div",{className:"markdown",children:[(0,d.jsxs)("p",{children:[i.texts[0].value,(0,d.jsx)("code",{children:i.texts[1].value}),i.texts[2].value,(0,d.jsx)("code",{children:i.texts[3].value}),i.texts[4].value]}),(0,d.jsx)("p",{children:i.texts[5].value}),(0,d.jsx)(r.Z,{title:"tailwind.css",lang:"css",children:i.texts[6].value}),(0,d.jsxs)("p",{children:[i.texts[7].value,(0,d.jsx)("code",{children:i.texts[8].value}),i.texts[9].value,(0,d.jsx)("code",{children:i.texts[10].value}),i.texts[11].value,(0,d.jsx)("code",{children:i.texts[12].value}),i.texts[13].value,(0,d.jsx)("code",{children:i.texts[14].value}),i.texts[15].value]}),(0,d.jsx)(r.Z,{title:"app.tsx",lang:"tsx",children:i.texts[16].value}),(0,d.jsxs)("h2",{id:"禁用主题",children:[(0,d.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#禁用主题",children:(0,d.jsx)("span",{className:"icon icon-link"})}),"禁用主题"]}),(0,d.jsx)("p",{children:i.texts[17].value}),(0,d.jsx)(r.Z,{lang:"css",children:i.texts[18].value}),(0,d.jsx)("p",{children:i.texts[19].value}),(0,d.jsx)(r.Z,{lang:"css",children:i.texts[20].value}),(0,d.jsxs)("h2",{id:"局部主题",children:[(0,d.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#局部主题",children:(0,d.jsx)("span",{className:"icon icon-link"})}),"局部主题"]}),(0,d.jsxs)("p",{children:[i.texts[21].value,(0,d.jsx)("code",{children:i.texts[22].value}),i.texts[23].value,(0,d.jsx)("code",{children:i.texts[24].value}),i.texts[25].value]}),(0,d.jsx)(r.Z,{title:"app.tsx",lang:"tsx",children:i.texts[26].value}),(0,d.jsxs)("h2",{id:"自定义主题",children:[(0,d.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#自定义主题",children:(0,d.jsx)("span",{className:"icon icon-link"})}),"自定义主题"]}),(0,d.jsx)("p",{children:i.texts[27].value}),(0,d.jsx)(r.Z,{title:"tailwind.css",lang:"css",children:i.texts[28].value}),(0,d.jsxs)("p",{children:[i.texts[29].value,(0,d.jsx)("a",{href:"https://tailwindcss.com/docs/colors",children:(0,d.jsx)("code",{children:i.texts[30].value})}),i.texts[31].value,(0,d.jsx)("a",{href:"https://developer.mozilla.org/docs/Web/CSS/color",children:(0,d.jsx)("code",{children:i.texts[32].value})}),i.texts[33].value]}),(0,d.jsxs)("p",{children:[i.texts[34].value,(0,d.jsx)("a",{href:"https://tailwindcss.com/docs/colors",children:(0,d.jsx)("code",{children:i.texts[35].value})}),i.texts[36].value]}),(0,d.jsx)(r.Z,{title:"tailwind.css",lang:"css",children:i.texts[37].value}),(0,d.jsxs)("h2",{id:"修改内置主题",children:[(0,d.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#修改内置主题",children:(0,d.jsx)("span",{className:"icon icon-link"})}),"修改内置主题"]}),(0,d.jsx)("p",{children:i.texts[38].value}),(0,d.jsx)("p",{children:i.texts[39].value}),(0,d.jsx)(r.Z,{title:"tailwind.css",lang:"css",children:i.texts[40].value}),(0,d.jsx)("p",{children:i.texts[41].value})]})})})})}},95633:function(e,n,a){a.r(n),a.d(n,{texts:function(){return r}});const r=[{value:"Metis UI 只针对颜色进行主题定制，默认提供了两套主题：",paraId:0},{value:"light",paraId:0},{value:" 和 ",paraId:0},{value:"dark",paraId:0},{value:"。您还可以创建自己的自定义主题或修改内置主题。",paraId:0},{value:'您可以在 CSS 文件中的 @plugin "metis-ui/plugin" 后添加括号来管理主题。',paraId:1},{value:"@plugin 'metis-ui/plugin' {\n  themes: light --default, dark --dark; /* --default: 默认主题 --dark: 默认暗色主题，适配 prefers-color-scheme: dark */\n}\n",paraId:2},{value:"通过 ",paraId:3},{value:"ConfigProvider",paraId:3},{value:" 组件来设置当前主题，默认可选值 ",paraId:3},{value:"light",paraId:3},{value:"、",paraId:3},{value:"dark",paraId:3},{value:"、",paraId:3},{value:"system",paraId:3},{value:"。",paraId:3},{value:"import React from 'react';\nimport { ConfigProvider } from 'metis-ui';\n\nconst App: React.FC = () => <ConfigProvider theme=\"dark\">{/* ... */}</ConfigProvider>;\n\nexport default App;\n",paraId:4},{value:"禁用一个主题。",paraId:5,tocIndex:0},{value:"@plugin './src/plugin' {\n  themes: light --default;\n}\n",paraId:6,tocIndex:0},{value:"禁用所有主题。",paraId:7,tocIndex:0},{value:"@plugin './src/plugin' {\n  themes: false;\n}\n",paraId:8,tocIndex:0},{value:"可以嵌套使用 ",paraId:9,tocIndex:1},{value:"ConfigProvider",paraId:9,tocIndex:1},{value:" 来实现局部主题的更换。在子主题中未被改变的 ",paraId:9,tocIndex:1},{value:"theme",paraId:9,tocIndex:1},{value:" 将会继承父主题。",paraId:9,tocIndex:1},{value:'import React from \'react\';\nimport { Button, ConfigProvider, Space } from \'metis-ui\';\n\nconst App: React.FC = () => (\n  <ConfigProvider theme="dark">\n    <Space>\n      <Button type="primary">Theme 1</Button>\n      <ConfigProvider theme="light">\n        <Button type="primary">Theme 2</Button>\n      </ConfigProvider>\n    </Space>\n  </ConfigProvider>\n);\n\nexport default App;\n',paraId:10,tocIndex:1},{value:'要添加新主题，请在 CSS 文件中使用 @plugin "metis-ui/theme" {}，其结构如下:',paraId:11,tocIndex:2},{value:"@import 'tailwindcss';\n\n@source './node_modules/metis-ui/es';\n@plugin \"metis-ui/plugin\";\n@plugin \"metis-ui/theme\" {\n  /* 主题名称 */\n  name: 'custom-theme';\n  /* 默认主题*/\n  default: true;\n  /* 默认暗色主题，跟随系统自动切换 */\n  dark: false;\n  /* light 或 dark */\n  color-scheme: light;\n\n  /* 品牌色 */\n  primary: 'indigo-600';\n  /* 品牌悬浮色，可选属性，可由系统推导生成 */\n  primary-hover: 'indigo-500';\n  /* 品牌激活色，可选属性，可由系统推导生成 */\n  primary-active: 'indigo-700';\n  /* 品牌背景色，可选属性，可由系统推导生成 */\n  primary-bg: 'indigo-50';\n  /* 品牌背景悬浮色，可选属性，可由系统推导生成 */\n  primary-bg-hover: 'indigo-200';\n  /* 品牌边框色，可选属性，可由系统推导生成 */\n  primary-border: 'indigo-300';\n  /* 品牌次级边框色，可选属性，可由系统推导生成 */\n  primary-border-secondary: 'indigo-600/10';\n\n  /* 成功色 */\n  success: 'green-500';\n  /* 成功悬浮色，可选属性，可由系统推导生成 */\n  success-hover: 'green-400';\n  /* 成功激活色，可选属性，可由系统推导生成 */\n  success-active: 'green-600';\n  /* 成功背景色，可选属性，可由系统推导生成 */\n  success-bg: 'green-50';\n  /* 成功背景悬浮色，可选属性，可由系统推导生成 */\n  success-bg-hover: 'green-100';\n  /* 成功边框色，可选属性，可由系统推导生成 */\n  success-border: 'green-300';\n  /* 成功次级边框色，可选属性，可由系统推导生成 */\n  success-border-secondary: 'green-500/20';\n\n  /* 警戒色 */\n  warning: 'yellow-500';\n  /* 警戒悬浮色，可选属性，可由系统推导生成 */\n  warning-hover: 'yellow-400';\n  /* 警戒激活色，可选属性，可由系统推导生成 */\n  warning-active: 'yellow-600';\n  /* 警戒背景色，可选属性，可由系统推导生成 */\n  warning-bg: 'yellow-50';\n  /* 警戒背景悬浮色，可选属性，可由系统推导生成 */\n  warning-bg-hover: 'yellow-100';\n  /* 警戒边框色，可选属性，可由系统推导生成 */\n  warning-border: 'yellow-300';\n  /* 警戒次级边框色，可选属性，可由系统推导生成 */\n  warning-border-secondary: 'yellow-500/20';\n\n  /* 错误色 */\n  error: 'red-500';\n  /* 错误悬浮色，可选属性，可由系统推导生成 */\n  error-hover: 'red-400';\n  /* 错误激活色，可选属性，可由系统推导生成 */\n  error-active: 'red-600';\n  /* 错误背景色，可选属性，可由系统推导生成 */\n  error-bg: 'red-50';\n  /* 错误背景悬浮色，可选属性，可由系统推导生成 */\n  error-bg-hover: 'red-100';\n  /* 错误边框色，可选属性，可由系统推导生成 */\n  error-border: 'red-300';\n  /* 错误次级边框色，可选属性，可由系统推导生成 */\n  error-border-secondary: 'red-500/20';\n\n  /* 一级文本色 */\n  text: 'gray-900';\n  /* 二级文本色，可选属性，可由系统推导生成 */\n  text-secondary: 'gray-500';\n  /* 三级文本色，可选属性，可由系统推导生成 */\n  text-tertiary: 'gray-400';\n  /* 四级文本色，可选属性，可由系统推导生成 */\n  text-quaternary: 'gray-300';\n\n  /* 一级边框色 */\n  border: 'gray-300';\n  /* 二级边框色，可选属性，可由系统推导生成 */\n  border-secondary: 'gray-200';\n  /* 三级边框色，可选属性，可由系统推导生成 */\n  border-tertiary: 'gray-100';\n\n  /* 一级填充色 */\n  fill: 'gray-950/20';\n  /* 二级填充色，可选属性，可由系统推导生成 */\n  fill-secondary: 'gray-950/15';\n  /* 三级填充色，可选属性，可由系统推导生成 */\n  fill-tertiary: 'gray-950/10';\n  /* 四级填充色，可选属性，可由系统推导生成 */\n  fill-quaternary: 'gray-950/5';\n  /* 五级填充色，可选属性，可由系统推导生成 */\n  fill-quinary: 'gray-950/2';\n\n  /* 组件容器背景 */\n  container: 'white';\n\n  /* 引起注意的背景色 */\n  spotlight: 'gray-900/85';\n\n  /* 浮层的背景蒙层色 */\n  mask: 'gray-900/45';\n\n  /** 滚动组件滚动条颜色 */\n  scrollbar-track: 'black/5';\n  scrollbar-thumb: 'black/50';\n}\n",paraId:12,tocIndex:2},{value:"主题颜色可以是 ",paraId:13,tocIndex:2},{value:"Tailwindcss Color",paraId:13,tocIndex:2},{value:" 或者 ",paraId:13,tocIndex:2},{value:"CSS Color",paraId:13,tocIndex:2},{value:"。",paraId:13,tocIndex:2},{value:"支持由 ",paraId:14,tocIndex:2},{value:"Tailwindcss Color",paraId:14,tocIndex:2},{value:" 推导生成次级颜色，你可以像这样简化主题的定制：",paraId:14,tocIndex:2},{value:"@import 'tailwindcss';\n\n@source './node_modules/metis-ui/es';\n@plugin \"metis-ui/plugin\";\n@plugin \"metis-ui/theme\" {\n  /* 主题名称 */\n  name: 'custom-theme';\n  /* 默认主题*/\n  default: true;\n  /* 默认暗色主题，跟随系统自动切换 */\n  dark: false;\n  /* light 或 dark */\n  color-scheme: light;\n\n  /* 品牌色 */\n  primary: 'sky-600';\n  /* 成功色 */\n  success: 'green-500';\n  /* 警戒色 */\n  warning: 'yellow-500';\n  /* 错误色 */\n  error: 'red-500';\n  /* 一级文本色 */\n  text: 'gray-900';\n  /* 一级边框色 */\n  border: 'gray-300';\n  /* 一级填充色 */\n  fill: 'gray-950/20';\n  /* 组件容器背景色 */\n  container: 'white';\n  /* 浮层背景色 */\n  elevated: 'white';\n  /* 引起注意的背景色 */\n  spotlight: 'gray-900/85';\n  /* 浮层的背景蒙层色 */\n  mask: 'gray-900/45';\n  /** 滚动组件滚动条颜色 */\n  scrollbar-track: 'black/5';\n  scrollbar-thumb: 'black/50';\n}\n",paraId:15,tocIndex:2},{value:"要自定义内置主题，您可以使用与添加新主题相同的结构，但使用与内置主题相同的名称。",paraId:16,tocIndex:3},{value:"例如，要自定义 light 主题：",paraId:17,tocIndex:3},{value:"@import 'tailwindcss';\n\n@source './node_modules/metis-ui/es';\n@plugin \"metis-ui/plugin\";\n@plugin \"metis-ui/theme\" {\n  /* 主题名称 */\n  name: 'light';\n  /* 默认主题*/\n  default: true;\n  /* 默认暗色主题，跟随系统自动切换 */\n  dark: false;\n  /* light 或 dark */\n  color-scheme: light;\n\n  /* 品牌色 */\n  primary: 'pink-600';\n}\n",paraId:18,tocIndex:3},{value:"所有其他颜色将从原主题继承。",paraId:19,tocIndex:3}]}}]);