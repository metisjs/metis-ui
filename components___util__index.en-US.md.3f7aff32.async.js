"use strict";(self.webpackChunkmetis_ui=self.webpackChunkmetis_ui||[]).push([[6887],{23456:function(e,t,n){n.r(t);n(37496),n(82857),n(91238),n(83120),n(48415),n(95300),n(11024),n(65110),n(10006),n(18637),n(741),n(30166);var o=n(91512),a=n(35055),r=n(30158),s=n(39546),i=n(6020),p=n(74132);t.default=function(){return(0,p.jsx)(a.DumiPage,{children:(0,p.jsx)(s.Suspense,{fallback:(0,p.jsx)(r.Z,{}),children:(0,p.jsx)(p.Fragment,{children:(0,p.jsxs)("div",{className:"markdown",children:[(0,p.jsxs)("h2",{id:"getref",children:[(0,p.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#getref",children:(0,p.jsx)("span",{className:"icon icon-link"})}),"GetRef"]}),(0,p.jsxs)("p",{children:[i.texts[0].value,(0,p.jsx)("code",{children:i.texts[1].value}),i.texts[2].value]}),(0,p.jsx)(o.Z,{lang:"tsx",children:i.texts[3].value}),(0,p.jsxs)("h2",{id:"getprops",children:[(0,p.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#getprops",children:(0,p.jsx)("span",{className:"icon icon-link"})}),"GetProps"]}),(0,p.jsxs)("p",{children:[i.texts[4].value,(0,p.jsx)("code",{children:i.texts[5].value}),i.texts[6].value]}),(0,p.jsx)(o.Z,{lang:"tsx",children:i.texts[7].value}),(0,p.jsxs)("h2",{id:"getprop",children:[(0,p.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#getprop",children:(0,p.jsx)("span",{className:"icon icon-link"})}),"GetProp"]}),(0,p.jsxs)("p",{children:[i.texts[8].value,(0,p.jsx)("code",{children:i.texts[9].value}),i.texts[10].value,(0,p.jsx)("code",{children:i.texts[11].value}),i.texts[12].value]}),(0,p.jsx)(o.Z,{lang:"tsx",children:i.texts[13].value})]})})})})}},6020:function(e,t,n){n.r(t),n.d(t,{texts:function(){return o}});const o=[{value:"Get the ",paraId:0,tocIndex:0},{value:"ref",paraId:0,tocIndex:0},{value:" property definition of the component, which is very useful for components that are not directly exposed or child components.",paraId:0,tocIndex:0},{value:"import type { GetRef } from 'metis-ui';\nimport { Select } from 'metis-ui';\n\ntype SelectRefType = GetRef<typeof Select>; // BaseSelectRef\n",paraId:1,tocIndex:0},{value:"Get the ",paraId:2,tocIndex:1},{value:"props",paraId:2,tocIndex:1},{value:" property definition of the component:",paraId:2,tocIndex:1},{value:"import type { GetProps } from 'metis-ui';\nimport { Checkbox } from 'metis-ui';\n\ntype CheckboxGroupType = GetProps<typeof Checkbox.Group>;\n",paraId:3,tocIndex:1},{value:"Get the single ",paraId:4,tocIndex:2},{value:"props",paraId:4,tocIndex:2},{value:" property definition of the component. It has encapsulated ",paraId:4,tocIndex:2},{value:"NonNullable",paraId:4,tocIndex:2},{value:", so you don't have to worry about it being empty:",paraId:4,tocIndex:2},{value:"import type { GetProp, SelectProps } from 'metis-ui';\nimport { Select } from 'metis-ui';\n\n// Both of these can work\ntype SelectOptionType1 = GetProp<SelectProps, 'options'>[number];\ntype SelectOptionType2 = GetProp<typeof Select, 'options'>[number];\n",paraId:5,tocIndex:2}]}}]);