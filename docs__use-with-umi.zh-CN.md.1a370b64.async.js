"use strict";(self.webpackChunkmetis_ui=self.webpackChunkmetis_ui||[]).push([[2073],{18979:function(e,n,t){t.r(n);t(37496),t(82857),t(91238),t(83120),t(48415),t(95300),t(11024),t(65110),t(10006),t(18637);var a=t(741),s=(t(30166),t(91512)),i=t(35055),l=t(30158),d=t(39546),r=t(88291),u=t(74132);n.default=function(){return(0,u.jsx)(i.DumiPage,{children:(0,u.jsx)(d.Suspense,{fallback:(0,u.jsx)(l.Z,{}),children:(0,u.jsxs)(u.Fragment,{children:[(0,u.jsxs)("div",{className:"markdown",children:[(0,u.jsxs)("p",{children:[(0,u.jsx)("a",{href:"https://umijs.org/",children:r.texts[0].value}),r.texts[1].value]}),(0,u.jsx)("p",{children:r.texts[2].value}),(0,u.jsxs)("h2",{id:"初始化项目",children:[(0,u.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#初始化项目",children:(0,u.jsx)("span",{className:"icon icon-link"})}),"初始化项目"]}),(0,u.jsxs)("p",{children:[r.texts[3].value,(0,u.jsx)("a",{href:"https://github.com/yarnpkg/yarn/",children:r.texts[4].value}),r.texts[5].value,(0,u.jsx)("a",{href:"https://pnpm.io/zh/",children:r.texts[6].value}),r.texts[7].value,(0,u.jsx)("a",{href:"https://bun.sh/",children:r.texts[8].value}),r.texts[9].value]})]}),(0,u.jsx)(a.Z,{npm:"$ npx create-umi metis-ui-demo",yarn:"$ yarn create umi metis-ui-demo",pnpm:"$ pnpm create umi metis-ui-demo",bun:"$ bun create umi metis-ui-demo"}),(0,u.jsxs)("div",{className:"markdown",children:[(0,u.jsx)("p",{children:r.texts[10].value}),(0,u.jsx)(s.Z,{lang:"bash",children:r.texts[11].value}),(0,u.jsx)("p",{children:r.texts[12].value}),(0,u.jsx)("p",{children:r.texts[13].value}),(0,u.jsxs)("h2",{id:"引入-metis-ui",children:[(0,u.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#引入-metis-ui",children:(0,u.jsx)("span",{className:"icon icon-link"})}),"引入 metis-ui"]}),(0,u.jsx)("p",{children:r.texts[14].value})]}),(0,u.jsx)(a.Z,{npm:"$ npm i @metisjs/umi-plugins -D\n$ npm i metis-ui tailwindcss @metisjs/icons -S",yarn:"$ yarn add @metisjs/umi-plugins -D\n$ yarn add metis-ui tailwindcss @metisjs/icons",pnpm:"$ pnpm add @metisjs/umi-plugins -D\n$ pnpm add metis-ui tailwindcss @metisjs/icons",bun:"$ bun add @metisjs/umi-plugins -D\n$ bun add metis-ui tailwindcss @metisjs/icons"}),(0,u.jsxs)("div",{className:"markdown",children:[(0,u.jsxs)("p",{children:[r.texts[15].value,(0,u.jsx)("code",{children:r.texts[16].value}),r.texts[17].value,(0,u.jsx)("code",{children:r.texts[18].value}),r.texts[19].value,(0,u.jsx)("code",{children:r.texts[20].value}),r.texts[21].value,(0,u.jsx)("a",{href:"https://umijs.org/docs/max/i18n",children:r.texts[22].value}),r.texts[23].value]}),(0,u.jsx)("p",{children:r.texts[24].value}),(0,u.jsx)(s.Z,{lang:"bash",children:r.texts[25].value}),(0,u.jsxs)("p",{children:[r.texts[26].value,(0,u.jsx)("strong",{children:r.texts[27].value})]}),(0,u.jsxs)("p",{children:[r.texts[28].value,(0,u.jsx)("code",{children:r.texts[29].value}),r.texts[30].value]}),(0,u.jsx)(s.Z,{title:".umirc.ts",lang:"ts",highlightLines:[9,10],children:r.texts[31].value}),(0,u.jsxs)("p",{children:[(0,u.jsx)("code",{children:r.texts[32].value}),r.texts[33].value,(0,u.jsx)(i.Link,{to:"/components/config-provider-cn#api",children:r.texts[34].value}),r.texts[35].value]}),(0,u.jsxs)("p",{children:[r.texts[36].value,(0,u.jsx)("code",{children:r.texts[37].value})]}),(0,u.jsx)(s.Z,{title:"tailwindcss.css",lang:"css",children:r.texts[38].value}),(0,u.jsxs)("p",{children:[r.texts[39].value,(0,u.jsx)("code",{children:r.texts[40].value})]}),(0,u.jsx)(s.Z,{title:"index.tsx",lang:"tsx",children:r.texts[41].value}),(0,u.jsx)("p",{children:r.texts[42].value}),(0,u.jsxs)("h3",{id:"构建时配置",children:[(0,u.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#构建时配置",children:(0,u.jsx)("span",{className:"icon icon-link"})}),"构建时配置"]}),(0,u.jsxs)("p",{children:[r.texts[43].value,(0,u.jsx)("code",{children:r.texts[44].value}),r.texts[45].value,(0,u.jsx)("code",{children:r.texts[46].value}),r.texts[47].value,(0,u.jsx)(i.Link,{to:"/components/config-provider-cn#api",children:r.texts[48].value}),r.texts[49].value]}),(0,u.jsx)(s.Z,{title:".umirc.ts",lang:"ts",highlightLines:[5],children:r.texts[50].value}),(0,u.jsxs)("h3",{id:"运行时配置",children:[(0,u.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#运行时配置",children:(0,u.jsx)("span",{className:"icon icon-link"})}),"运行时配置"]}),(0,u.jsxs)("p",{children:[r.texts[51].value,(0,u.jsx)("code",{children:r.texts[52].value}),r.texts[53].value]}),(0,u.jsx)(s.Z,{title:"app.ts",lang:"tsx",children:r.texts[54].value}),(0,u.jsxs)("h3",{id:"动态切换全局配置",children:[(0,u.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#动态切换全局配置",children:(0,u.jsx)("span",{className:"icon icon-link"})}),"动态切换全局配置"]}),(0,u.jsxs)("p",{children:[r.texts[55].value,(0,u.jsx)("code",{children:r.texts[56].value}),r.texts[57].value]}),(0,u.jsxs)("p",{children:[r.texts[58].value,(0,u.jsx)("code",{children:r.texts[59].value}),r.texts[60].value]}),(0,u.jsx)(s.Z,{title:"ThemeSwitch.tsx",lang:"tsx",children:r.texts[61].value}),(0,u.jsxs)("p",{children:[r.texts[62].value,(0,u.jsx)("code",{children:r.texts[63].value}),r.texts[64].value,(0,u.jsx)("code",{children:r.texts[65].value})]}),(0,u.jsx)(s.Z,{title:"index.tsx",lang:"tsx",children:r.texts[66].value}),(0,u.jsx)("p",{children:r.texts[67].value}),(0,u.jsxs)("h3",{id:"国际化",children:[(0,u.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#国际化",children:(0,u.jsx)("span",{className:"icon icon-link"})}),"国际化"]}),(0,u.jsxs)("p",{children:[r.texts[68].value,(0,u.jsx)("code",{children:r.texts[69].value}),r.texts[70].value,(0,u.jsx)("code",{children:r.texts[71].value}),r.texts[72].value,(0,u.jsx)("a",{href:"https://umijs.org/docs/max/i18n",children:r.texts[73].value}),r.texts[74].value]}),(0,u.jsx)(s.Z,{title:".umirc.ts",lang:"ts",highlightLines:[8],children:r.texts[75].value}),(0,u.jsxs)("p",{children:[r.texts[76].value,(0,u.jsx)("a",{href:"https://umijs.org/",children:r.texts[77].value}),r.texts[78].value]})]})]})})})}},88291:function(e,n,t){t.r(n),t.d(n,{texts:function(){return a}});const a=[{value:"Umi",paraId:0},{value:"，是蚂蚁集团的底层前端框架，同时支持配置式路由和约定式路由，保证路由的功能完备，并以此进行功能扩展。然后配以生命周期完善的插件体系，覆盖从源码到构建产物的每个生命周期，支持各种功能扩展和业务需求。",paraId:0},{value:"本文会引导你使用 Umi、Metis UI 从 0 开始创建一个简单应用。",paraId:1},{value:"在开始之前，你可能需要安装 ",paraId:2,tocIndex:0},{value:"yarn",paraId:2,tocIndex:0},{value:" 或者 ",paraId:2,tocIndex:0},{value:"pnpm",paraId:2,tocIndex:0},{value:" 或者 ",paraId:2,tocIndex:0},{value:"bun",paraId:2,tocIndex:0},{value:"。",paraId:2,tocIndex:0},{value:"这里选「Simple App」。",paraId:3},{value:"? Pick Umi App Template › - Use arrow-keys. Return to submit.\n❯   Simple App\n    Ant Design Pro\n    Vue Simple App\n    Umi Plugin\n",paraId:4},{value:"其他选项可根据实际需求自行选择。",paraId:5},{value:"然后工具会自动安装依赖，并执行 Umi 的初始化脚本。",paraId:6},{value:"现在从 yarn 或 npm 或 pnpm 或 bun 安装并引入 metis-ui，以及一些本教程会用到的依赖。",paraId:7,tocIndex:1},{value:"其中 ",paraId:8},{value:"@metisjs/umi-plugins",paraId:8},{value:" 是 metis 根据 Umi 框架研发的插件集，可让用户通过配置的方式一键开启和使用 ",paraId:8},{value:"metis-ui",paraId:8},{value:"、",paraId:8},{value:"locale",paraId:8},{value:"(与",paraId:8},{value:"@umijs/plugins/locale",paraId:8},{value:"功能类似)",paraId:8},{value:"完成后，执行以下命令启动项目。",paraId:9},{value:"$ pnpm run dev\numi dev\ninfo  - Umi v4.0.46\n        ╔════════════════════════════════════════════════════╗\n        ║ App listening at:                                  ║\n        ║  >   Local: http://localhost:8000                  ║\nready - ║  > Network: http://*********:8000                  ║\n        ║                                                    ║\n        ║ Now you can open browser with the above addresses↑ ║\n        ╚════════════════════════════════════════════════════╝\n",paraId:10},{value:"跟着提示点击命令行里的 url，会自动打开浏览器。如果顺利，你会看到 ",paraId:11},{value:"Yay! Welcome to Umi!",paraId:11},{value:"修改 ",paraId:12},{value:".umirc.ts",paraId:12},{value:"。",paraId:12},{value:"import { defineConfig } from 'umi';\n\nexport default defineConfig({\n  routes: [\n    { path: '/', component: 'index' },\n    { path: '/docs', component: 'docs' },\n  ],\n  npmClient: 'pnpm',\n  metisui: { theme: 'system' },\n  plugins: ['@metisjs/umi-plugins/dist/metisui'],\n});\n",paraId:13},{value:"metisui",paraId:14},{value:" 支持 ",paraId:14},{value:"ConfigProvider",paraId:15},{value:" 的所有配置。",paraId:14},{value:"根目录下新建 ",paraId:16},{value:"tailwind.css",paraId:16},{value:"@import 'tailwindcss';\n\n@source './node_modules/metis-ui/es';\n@plugin 'metis-ui/plugin';\n",paraId:17},{value:"修改 ",paraId:18},{value:"src/pages/index.tsx",paraId:18},{value:'import { Alert } from \'metis-ui\';\n\nexport default function HomePage() {\n  return (\n    <div className="h-screen w-screen">\n      <Alert type="info" banner message="Hello" description="Welcome to metis-ui" />\n    </div>\n  );\n}\n',paraId:19},{value:"好了，现在你应该能看到页面上已经有了 metis-ui 的 Alert 组件，接下来就可以继续开发应用了。",paraId:20},{value:"在 ",paraId:21,tocIndex:2},{value:".umirc.ts",paraId:21,tocIndex:2},{value:" 中，通过 ",paraId:21,tocIndex:2},{value:"metisui",paraId:21,tocIndex:2},{value:" 配置全局 ",paraId:21,tocIndex:2},{value:"ConfigProvider",paraId:22,tocIndex:2},{value:"。",paraId:21,tocIndex:2},{value:"import { defineConfig } from 'umi';\n\nexport default defineConfig({\n  // ...\n  metisui: { theme: 'system', componentSize: 'small' },\n  plugins: ['@metisjs/umi-plugins/dist/metisui'],\n});\n",paraId:23,tocIndex:2},{value:"在 ",paraId:24,tocIndex:3},{value:"src/app.ts(x)",paraId:24,tocIndex:3},{value:" 运行时配置中可以修改 ConfigProvider 的值，比如可以从 localStorage读取主题。",paraId:24,tocIndex:3},{value:"import { RuntimeMetisUIConfig } from 'umi';\n\nexport const metisui: RuntimeMetisUIConfig = (memo) => {\n  const theme = localStorage.getItem('theme');\n  if (theme) {\n    memo.theme = theme;\n  }\n\n  return memo;\n};\n",paraId:25,tocIndex:3},{value:"通过 ",paraId:26,tocIndex:4},{value:"useMetisUIConfig",paraId:26,tocIndex:4},{value:" 方法来动态获取、修改 ConfigProvider 配置，通常可用于动态修改主题。",paraId:26,tocIndex:4},{value:"新建 ",paraId:27,tocIndex:4},{value:"src/components/ThemeSwitch.tsx",paraId:27,tocIndex:4},{value:" 组件。",paraId:27,tocIndex:4},{value:"import type { FC } from 'react';\nimport { ComputerDesktopOutline, MoonSparklesOutline, SunOutline } from '@metisjs/icons';\nimport { Dropdown } from 'metis-ui';\nimport { MenuClickEventHandler } from 'metis-ui/es/menu/interface';\nimport { useMetisUIConfig } from 'umi';\n\nexport type ThemeName = 'system' | 'light' | 'dark';\n\nconst themes = [\n  {\n    name: 'light',\n    icon: <SunOutline />,\n    label: '亮色模式',\n  },\n  {\n    name: 'dark',\n    icon: <MoonSparklesOutline />,\n    label: '暗色模式',\n  },\n  {\n    name: 'system',\n    icon: <ComputerDesktopOutline />,\n    label: '跟随系统',\n  },\n];\n\nconst ThemeSwitch: FC = () => {\n  const [config, setConfig] = useMetisUIConfig();\n\n  const onThemeChange: MenuClickEventHandler = ({ key }) => {\n    setConfig({ theme: key as ThemeName });\n    localStorage.setItem('theme', key as ThemeName);\n  };\n\n  const currentTheme = themes.find((theme) => theme.name === (config.theme ?? 'system'));\n\n  return (\n    <Dropdown\n      trigger={['click']}\n      menu={{\n        items: themes.map((theme) => ({\n          key: theme.name,\n          label: theme.label,\n          icon: theme.icon,\n        })),\n        selectable: true,\n        selectedKeys: [currentTheme!.name],\n        onClick: onThemeChange,\n        className: { item: { icon: '-ms-1 size-5' } },\n      }}\n    >\n      <button className=\"text-text m-6 flex items-center *:size-10\">{currentTheme?.icon}</button>\n    </Dropdown>\n  );\n};\n\nexport default ThemeSwitch;\n",paraId:28,tocIndex:4},{value:"再次修改 ",paraId:29,tocIndex:4},{value:"src/pages/index.tsx",paraId:29,tocIndex:4},{value:"，引入 ",paraId:29,tocIndex:4},{value:"ThemeSwitch",paraId:29,tocIndex:4},{value:'import { Alert } from \'metis-ui\';\nimport ThemeSwitch from \'@/components/ThemeSwitch\';\n\nexport default function HomePage() {\n  return (\n    <div className="h-screen w-screen">\n      <Alert type="info" banner message="Hello" description="Welcome to metis-ui" />\n      <ThemeSwitch />\n    </div>\n  );\n}\n',paraId:30,tocIndex:4},{value:"现在你应该能看到页面上已经有了样式切换的图标了，试试切换不同的样式吧。",paraId:31,tocIndex:4},{value:"如果你需要在应用中开启国际化功能，使用 ",paraId:32,tocIndex:5},{value:"@metisjs/umi-plugins/dist/locale",paraId:32,tocIndex:5},{value:" 替换 ",paraId:32,tocIndex:5},{value:"@umijs/plugins/dist/locale",paraId:32,tocIndex:5},{value:" 插件，使用方法可",paraId:32,tocIndex:5},{value:"参考",paraId:32,tocIndex:5},{value:"。",paraId:32,tocIndex:5},{value:"import { defineConfig } from 'umi';\n\nexport default defineConfig({\n  // ...\n  locale: { metisui: true, default: 'zh-CN' },\n  plugins: [\n    '@metisjs/umi-plugins/dist/metisui',\n    '@metisjs/umi-plugins/dist/locale'\n  ],\n});\n",paraId:33,tocIndex:5},{value:"好了，现在你可以继续选用其他组件开发应用了。其他开发流程你可以参考 Umi 的",paraId:34,tocIndex:5},{value:"官方文档",paraId:34,tocIndex:5},{value:"。",paraId:34,tocIndex:5}]}}]);