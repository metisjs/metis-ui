"use strict";(self.webpackChunkmetis_ui=self.webpackChunkmetis_ui||[]).push([[1782],{24592:function(e,t,a){a.r(t);a(37496),a(82857),a(91238),a(83120),a(48415),a(95300),a(11024),a(65110),a(10006),a(18637),a(741),a(30166);var n=a(91512),r=a(35055),s=a(30158),l=a(39546),o=a(70035),c=a(74132);t.default=function(){return(0,c.jsx)(r.DumiPage,{children:(0,c.jsx)(l.Suspense,{fallback:(0,c.jsx)(s.Z,{}),children:(0,c.jsx)(c.Fragment,{children:(0,c.jsxs)("div",{className:"markdown",children:[(0,c.jsxs)("h2",{id:"getref",children:[(0,c.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#getref",children:(0,c.jsx)("span",{className:"icon icon-link"})}),"GetRef"]}),(0,c.jsxs)("p",{children:[o.texts[0].value,(0,c.jsx)("code",{children:o.texts[1].value}),o.texts[2].value,(0,c.jsx)("code",{children:o.texts[3].value}),o.texts[4].value]}),(0,c.jsx)(n.Z,{lang:"tsx",children:o.texts[5].value}),(0,c.jsxs)("h2",{id:"getprops",children:[(0,c.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#getprops",children:(0,c.jsx)("span",{className:"icon icon-link"})}),"GetProps"]}),(0,c.jsxs)("p",{children:[o.texts[6].value,(0,c.jsx)("code",{children:o.texts[7].value}),o.texts[8].value]}),(0,c.jsx)(n.Z,{lang:"tsx",children:o.texts[9].value}),(0,c.jsxs)("h2",{id:"getprop",children:[(0,c.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#getprop",children:(0,c.jsx)("span",{className:"icon icon-link"})}),"GetProp"]}),(0,c.jsxs)("p",{children:[o.texts[10].value,(0,c.jsx)("code",{children:o.texts[11].value}),o.texts[12].value,(0,c.jsx)("code",{children:o.texts[13].value}),o.texts[14].value]}),(0,c.jsx)(n.Z,{lang:"tsx",children:o.texts[15].value})]})})})})}},70035:function(e,t,a){a.r(t),a.d(t,{texts:function(){return n}});const n=[{value:"获取组件的 ",paraId:0,tocIndex:0},{value:"ref",paraId:0,tocIndex:0},{value:" 属性定义，这对于未直接暴露或者子组件的 ",paraId:0,tocIndex:0},{value:"ref",paraId:0,tocIndex:0},{value:" 属性定义非常有用。",paraId:0,tocIndex:0},{value:"import type { GetRef } from 'metis-ui';\nimport { Select } from 'metis-ui';\n\ntype SelectRefType = GetRef<typeof Select>; // BaseSelectRef\n",paraId:1,tocIndex:0},{value:"获取组件的 ",paraId:2,tocIndex:1},{value:"props",paraId:2,tocIndex:1},{value:" 属性定义：",paraId:2,tocIndex:1},{value:"import type { GetProps } from 'metis-ui';\nimport { Checkbox } from 'metis-ui';\n\ntype CheckboxGroupType = GetProps<typeof Checkbox.Group>;\n",paraId:3,tocIndex:1},{value:"获取组件的单个 ",paraId:4,tocIndex:2},{value:"props",paraId:4,tocIndex:2},{value:" 属性定义。它已经将 ",paraId:4,tocIndex:2},{value:"NonNullable",paraId:4,tocIndex:2},{value:" 进行了封装，所以不用在考虑为空的情况：",paraId:4,tocIndex:2},{value:"import type { GetProp, SelectProps } from 'metis-ui';\nimport { Select } from 'metis-ui';\n\n// 以下两种都可以生效\ntype SelectOptionType1 = GetProp<SelectProps, 'options'>[number];\ntype SelectOptionType2 = GetProp<typeof Select, 'options'>[number];\n",paraId:5,tocIndex:2}]}}]);