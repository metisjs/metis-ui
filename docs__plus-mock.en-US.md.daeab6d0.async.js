"use strict";(self.webpackChunkmetis_ui=self.webpackChunkmetis_ui||[]).push([[9126],{65042:function(e,a,s){s.r(a);s(37496),s(82857),s(91238),s(83120),s(48415),s(95300),s(11024),s(65110),s(10006),s(18637),s(741),s(30166);var t=s(91512),r=s(35055),n=s(30158),d=s(39546),l=s(10140),i=s(74132);a.default=function(){return(0,i.jsx)(r.DumiPage,{children:(0,i.jsx)(d.Suspense,{fallback:(0,i.jsx)(n.Z,{}),children:(0,i.jsx)(i.Fragment,{children:(0,i.jsxs)("div",{className:"markdown",children:[(0,i.jsxs)("p",{children:[l.texts[0].value,(0,i.jsx)("a",{href:"https://mswjs.io/",children:l.texts[1].value}),l.texts[2].value,(0,i.jsx)("a",{href:"https://fakerjs.dev/",children:l.texts[3].value}),l.texts[4].value]}),(0,i.jsxs)("ul",{children:[(0,i.jsxs)("li",{children:[(0,i.jsx)("a",{href:"https://mswjs.io/",children:l.texts[5].value}),l.texts[6].value]}),(0,i.jsxs)("li",{children:[(0,i.jsx)("a",{href:"https://fakerjs.dev/",children:l.texts[7].value}),l.texts[8].value]})]}),(0,i.jsxs)("p",{children:[l.texts[9].value,(0,i.jsx)("code",{children:l.texts[10].value}),l.texts[11].value,(0,i.jsx)("a",{href:"https://mswjs.io/docs/",children:l.texts[12].value}),l.texts[13].value,(0,i.jsx)("a",{href:"https://fakerjs.dev/guide/",children:l.texts[14].value}),l.texts[15].value]}),(0,i.jsxs)("h2",{id:"directory-structure",children:[(0,i.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#directory-structure",children:(0,i.jsx)("span",{className:"icon icon-link"})}),"Directory Structure"]}),(0,i.jsx)(t.Z,{children:l.texts[16].value}),(0,i.jsxs)("h2",{id:"adding-mock-api-data",children:[(0,i.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#adding-mock-api-data",children:(0,i.jsx)("span",{className:"icon icon-link"})}),"Adding Mock API Data"]}),(0,i.jsxs)("p",{children:[l.texts[17].value,(0,i.jsx)("code",{children:l.texts[18].value}),l.texts[19].value,(0,i.jsx)("code",{children:l.texts[20].value}),l.texts[21].value]}),(0,i.jsx)(t.Z,{title:"src/mocks/handlers/faker-list.ts",lang:"ts",children:l.texts[22].value}),(0,i.jsxs)("p",{children:[l.texts[23].value,(0,i.jsx)("code",{children:l.texts[24].value}),l.texts[25].value]}),(0,i.jsx)(t.Z,{title:"src/mocks/handlers/index.ts",lang:"ts",highlightLines:[2,6],children:l.texts[26].value}),(0,i.jsxs)("p",{children:[l.texts[27].value,(0,i.jsx)("code",{children:l.texts[28].value}),l.texts[29].value]}),(0,i.jsx)("blockquote",{children:(0,i.jsx)("p",{children:l.texts[30].value})})]})})})})}},10140:function(e,a,s){s.r(a),s.d(a,{texts:function(){return t}});const t=[{value:"This project uses ",paraId:0},{value:"msw",paraId:0},{value:" to mock API requests, combined with ",paraId:0},{value:"faker-js",paraId:0},{value:" to generate random data for easier development and testing.",paraId:0},{value:"msw",paraId:1},{value:": Mock Service Worker, intercepts and mocks network requests, supporting both REST and GraphQL.",paraId:1},{value:"faker-js",paraId:1},{value:": Generates various types of fake data, such as names, addresses, images, and more.",paraId:1},{value:"You can check the implementation in the ",paraId:2},{value:"mocks",paraId:2},{value:" directory, or refer to the ",paraId:2},{value:"official msw documentation",paraId:2},{value:" and ",paraId:2},{value:"faker-js guide",paraId:2},{value:" for more usage details.",paraId:2},{value:"├── mocks\n│   ├── handlers           # All request handlers\n│   │   ├── index.ts       # Handler entry file, exports all module handlers\n│   │   └── user.ts        # User-related mock API handlers\n│   └── browser.ts         # Entry file to configure and start the mock service\n",paraId:3,tocIndex:0},{value:"Create a file named ",paraId:4,tocIndex:1},{value:"faker-list.ts",paraId:4,tocIndex:1},{value:" under ",paraId:4,tocIndex:1},{value:"src/mocks/handlers",paraId:4,tocIndex:1},{value:".",paraId:4,tocIndex:1},{value:"import { faker } from '@faker-js/faker';\nimport { delay, http, HttpResponse } from 'msw';\nimport type { CurrentUser } from '@/types/user';\nimport type { UserPermissions } from '@/utils/auth';\n\nconst userHandles = [\n  http.get('/api/faker-list', async ({ request }) => {\n    await delay(600);\n\n    return HttpResponse.json({\n      success: true,\n      data: [\n        /* Mock data, you can generate it using faker-js */\n      ],\n    });\n  }),\n];\n\nexport default userHandles;\n",paraId:5,tocIndex:1},{value:"Then import this file in ",paraId:6,tocIndex:1},{value:"src/mocks/handlers/index.ts",paraId:6,tocIndex:1},{value:":",paraId:6,tocIndex:1},{value:"import fakerListHandlers from './faker-list';\nimport userHandlers from './user';\n\nexport default [\n  ...userHandlers,\n  ...fakerListHandlers\n];\n",paraId:7,tocIndex:1},{value:"Now, any ",paraId:8,tocIndex:1},{value:"[GET]/api/faker-list",paraId:8,tocIndex:1},{value:" request will be intercepted and handled by the mock service.",paraId:8,tocIndex:1},{value:"Translate by ChartGPT",paraId:9,tocIndex:1}]}}]);