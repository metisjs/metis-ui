"use strict";(self.webpackChunkmetis_ui=self.webpackChunkmetis_ui||[]).push([[3477],{43477:function(e,a,d){d.r(a),d.d(a,{texts:function(){return t}});const t=[{value:"A dropdown menu for displaying choices - an elegant alternative to the native ",paraId:0,tocIndex:0},{value:"<select>",paraId:0,tocIndex:0},{value:" element.",paraId:0,tocIndex:0},{value:"Utilizing ",paraId:0,tocIndex:0},{value:"Radio",paraId:1,tocIndex:0},{value:" is recommended when there are fewer total options (less than 5).",paraId:0,tocIndex:0},{value:"Property",paraId:2,tocIndex:28},{value:"Description",paraId:2,tocIndex:28},{value:"Type",paraId:2,tocIndex:28},{value:"Default",paraId:2,tocIndex:28},{value:"Version",paraId:2,tocIndex:28},{value:"allowClear",paraId:2,tocIndex:28},{value:"Show clear button",paraId:2,tocIndex:28},{value:"boolean, { clearIcon?: ReactNode }",paraId:2,tocIndex:28},{value:"false",paraId:2,tocIndex:28},{value:"autoClearSearchValue",paraId:2,tocIndex:28},{value:"Whether the current search will be cleared on selecting an item. Only applies when ",paraId:2,tocIndex:28},{value:"mode",paraId:2,tocIndex:28},{value:" is set to ",paraId:2,tocIndex:28},{value:"multiple",paraId:2,tocIndex:28},{value:" or ",paraId:2,tocIndex:28},{value:"tags",paraId:2,tocIndex:28},{value:"boolean",paraId:2,tocIndex:28},{value:"true",paraId:2,tocIndex:28},{value:"autoFocus",paraId:2,tocIndex:28},{value:"Get focus by default",paraId:2,tocIndex:28},{value:"boolean",paraId:2,tocIndex:28},{value:"false",paraId:2,tocIndex:28},{value:"className",paraId:2,tocIndex:28},{value:"Semantic DOM class",paraId:2,tocIndex:28},{value:"SemanticDOM",paraId:3,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"defaultActiveFirstOption",paraId:2,tocIndex:28},{value:"Whether active first option by default",paraId:2,tocIndex:28},{value:"boolean",paraId:2,tocIndex:28},{value:"true",paraId:2,tocIndex:28},{value:"defaultOpen",paraId:2,tocIndex:28},{value:"Initial open state of dropdown",paraId:2,tocIndex:28},{value:"boolean",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"defaultValue",paraId:2,tocIndex:28},{value:"Initial selected option",paraId:2,tocIndex:28},{value:"string, string[], ",paraId:2,tocIndex:28},{value:"number, number[], ",paraId:2,tocIndex:28},{value:"Option, Option[]",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"disabled",paraId:2,tocIndex:28},{value:"Whether disabled select",paraId:2,tocIndex:28},{value:"boolean",paraId:2,tocIndex:28},{value:"false",paraId:2,tocIndex:28},{value:"displayRender",paraId:2,tocIndex:28},{value:"The render function of displaying selected options",paraId:2,tocIndex:28},{value:"(selectedOption) => ReactNode",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"dropdownStyle",paraId:2,tocIndex:28},{value:"The style of dropdown menu",paraId:2,tocIndex:28},{value:"CSSProperties",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"fieldNames",paraId:2,tocIndex:28},{value:"Customize node label, value, optionsï¼ŒgroupLabel field name",paraId:2,tocIndex:28},{value:"FileNames",paraId:4,tocIndex:28},{value:"{ label: ",paraId:2,tocIndex:28},{value:"label",paraId:2,tocIndex:28},{value:", value: ",paraId:2,tocIndex:28},{value:"value",paraId:2,tocIndex:28},{value:", options: ",paraId:2,tocIndex:28},{value:"options",paraId:2,tocIndex:28},{value:", groupLabel: ",paraId:2,tocIndex:28},{value:"label",paraId:2,tocIndex:28},{value:" }",paraId:2,tocIndex:28},{value:"filterOption",paraId:2,tocIndex:28},{value:"If true, filter options by input, if function, filter options against it. The function will receive two arguments, ",paraId:2,tocIndex:28},{value:"inputValue",paraId:2,tocIndex:28},{value:" and ",paraId:2,tocIndex:28},{value:"option",paraId:2,tocIndex:28},{value:", if the function returns ",paraId:2,tocIndex:28},{value:"true",paraId:2,tocIndex:28},{value:", the option will be included in the filtered set; Otherwise, it will be excluded",paraId:2,tocIndex:28},{value:"function(inputValue, option)",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"filterSort",paraId:2,tocIndex:28},{value:"Sort function for search options sorting, see ",paraId:2,tocIndex:28},{value:"Array.sort",paraId:2,tocIndex:28},{value:"'s compareFunction",paraId:2,tocIndex:28},{value:"(optionA: Option, optionB: Option) => number",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"getPopupContainer",paraId:2,tocIndex:28},{value:"Parent Node which the selector should be rendered to. Default to ",paraId:2,tocIndex:28},{value:"body",paraId:2,tocIndex:28},{value:". When position issues happen, try to modify it into scrollable content and position it relative.",paraId:2,tocIndex:28},{value:"function(triggerNode)",paraId:2,tocIndex:28},{value:"() => document.body",paraId:2,tocIndex:28},{value:"lazyLoad",paraId:2,tocIndex:28},{value:"Remote laze load request, effective only when using the ",paraId:2,tocIndex:28},{value:"request",paraId:2,tocIndex:28},{value:" configuration. if ",paraId:2,tocIndex:28},{value:"showSearch",paraId:2,tocIndex:28},{value:" is true, will search by remote service",paraId:2,tocIndex:28},{value:"boolean",paraId:2,tocIndex:28},{value:"false",paraId:2,tocIndex:28},{value:"listHeight",paraId:2,tocIndex:28},{value:"Config popup height",paraId:2,tocIndex:28},{value:"number",paraId:2,tocIndex:28},{value:"224",paraId:2,tocIndex:28},{value:"loading",paraId:2,tocIndex:28},{value:"Indicate loading state",paraId:2,tocIndex:28},{value:"boolean",paraId:2,tocIndex:28},{value:"false",paraId:2,tocIndex:28},{value:"maxTagCount",paraId:2,tocIndex:28},{value:"Max tag count to show. ",paraId:2,tocIndex:28},{value:"responsive",paraId:2,tocIndex:28},{value:" will cost render performance",paraId:2,tocIndex:28},{value:"number, ",paraId:2,tocIndex:28},{value:"responsive",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"responsive: 4.10",paraId:2,tocIndex:28},{value:"maxTagPlaceholder",paraId:2,tocIndex:28},{value:"Placeholder for not showing tags",paraId:2,tocIndex:28},{value:"ReactNode, function(omittedValues)",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"maxTagTextLength",paraId:2,tocIndex:28},{value:"Max tag text length to show",paraId:2,tocIndex:28},{value:"number",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"menuItemSelectedIcon",paraId:2,tocIndex:28},{value:"The custom menuItemSelected icon with options",paraId:2,tocIndex:28},{value:"ReactNode",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"mode",paraId:2,tocIndex:28},{value:"Set mode of Select",paraId:2,tocIndex:28},{value:"multiple",paraId:2,tocIndex:28},{value:", ",paraId:2,tocIndex:28},{value:"tags",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"notFoundContent",paraId:2,tocIndex:28},{value:"Specify content to show when no result matches",paraId:2,tocIndex:28},{value:"ReactNode",paraId:2,tocIndex:28},{value:"Not Found",paraId:2,tocIndex:28},{value:"open",paraId:2,tocIndex:28},{value:"Controlled open state of dropdown",paraId:2,tocIndex:28},{value:"boolean",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"optionFilterProp",paraId:2,tocIndex:28},{value:"Which prop value of option will be used for filter. If ",paraId:2,tocIndex:28},{value:"options",paraId:2,tocIndex:28},{value:" is set, it should be set to ",paraId:2,tocIndex:28},{value:"fieldNames.label",paraId:2,tocIndex:28},{value:".If ",paraId:2,tocIndex:28},{value:"request",paraId:2,tocIndex:28},{value:" is set, it will be pass to the request method.",paraId:2,tocIndex:28},{value:"string",paraId:2,tocIndex:28},{value:"fieldNames.label",paraId:2,tocIndex:28},{value:"optionRender",paraId:2,tocIndex:28},{value:"Customize the rendering dropdown options",paraId:2,tocIndex:28},{value:"(option: FlattenOptionData\\<BaseOption> , info: { index: number }) => React.ReactNode",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"options",paraId:2,tocIndex:28},{value:"Select options. Will get better perf than jsx definition",paraId:2,tocIndex:28},{value:"{ label, value }[]",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"placeholder",paraId:2,tocIndex:28},{value:"Placeholder of select",paraId:2,tocIndex:28},{value:"ReactNode",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"placement",paraId:2,tocIndex:28},{value:"The position where the selection box pops up",paraId:2,tocIndex:28},{value:"bottomLeft",paraId:2,tocIndex:28},{value:" ",paraId:2,tocIndex:28},{value:"bottomRight",paraId:2,tocIndex:28},{value:" ",paraId:2,tocIndex:28},{value:"topLeft",paraId:2,tocIndex:28},{value:" ",paraId:2,tocIndex:28},{value:"topRight",paraId:2,tocIndex:28},{value:"bottomLeft",paraId:2,tocIndex:28},{value:"popupMatchSelectWidth",paraId:2,tocIndex:28},{value:"Determine whether the popup menu and the select input are the same width. Default set ",paraId:2,tocIndex:28},{value:"min-width",paraId:2,tocIndex:28},{value:" same as input. Will ignore when value less than select width. ",paraId:2,tocIndex:28},{value:"false",paraId:2,tocIndex:28},{value:" will disable virtual scroll",paraId:2,tocIndex:28},{value:"boolean, number",paraId:2,tocIndex:28},{value:"true",paraId:2,tocIndex:28},{value:"popupRender",paraId:2,tocIndex:28},{value:"Customize dropdown content",paraId:2,tocIndex:28},{value:"(originNode: ReactNode) => ReactNode",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"removeIcon",paraId:2,tocIndex:28},{value:"The custom remove icon",paraId:2,tocIndex:28},{value:"ReactNode",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"request",paraId:2,tocIndex:28},{value:"Method to fetch remote options",paraId:2,tocIndex:28},{value:"RequestConfig",paraId:5,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"searchValue",paraId:2,tocIndex:28},{value:'The current input "search" text',paraId:2,tocIndex:28},{value:"string",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"showSearch",paraId:2,tocIndex:28},{value:"Whether select is searchable",paraId:2,tocIndex:28},{value:"boolean",paraId:2,tocIndex:28},{value:"single: false, multiple: true",paraId:2,tocIndex:28},{value:"size",paraId:2,tocIndex:28},{value:"Size of Select input",paraId:2,tocIndex:28},{value:"large",paraId:2,tocIndex:28},{value:", ",paraId:2,tocIndex:28},{value:"middle",paraId:2,tocIndex:28},{value:", ",paraId:2,tocIndex:28},{value:"small",paraId:2,tocIndex:28},{value:"middle",paraId:2,tocIndex:28},{value:"status",paraId:2,tocIndex:28},{value:"Set validation status",paraId:2,tocIndex:28},{value:"'error', 'warning'",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"suffixIcon",paraId:2,tocIndex:28},{value:"The custom suffix icon. Customize icon will not response click open to avoid icon designed to do other interactive. You can use ",paraId:2,tocIndex:28},{value:"pointer-events: none",paraId:2,tocIndex:28},{value:" style to bypass",paraId:2,tocIndex:28},{value:"ReactNode",paraId:2,tocIndex:28},{value:"tagRender",paraId:2,tocIndex:28},{value:"Customize tag render, only applies when ",paraId:2,tocIndex:28},{value:"mode",paraId:2,tocIndex:28},{value:" is set to ",paraId:2,tocIndex:28},{value:"multiple",paraId:2,tocIndex:28},{value:" or ",paraId:2,tocIndex:28},{value:"tags",paraId:2,tocIndex:28},{value:"(props) => ReactNode",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"tokenSeparators",paraId:2,tocIndex:28},{value:"Separator used to tokenize, only applies when ",paraId:2,tocIndex:28},{value:'mode="tags"',paraId:2,tocIndex:28},{value:"string[]",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"value",paraId:2,tocIndex:28},{value:"Current selected option (considered as a immutable array)",paraId:2,tocIndex:28},{value:"string, string[], ",paraId:2,tocIndex:28},{value:"number, number[], ",paraId:2,tocIndex:28},{value:"Option, Option[]",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"variant",paraId:2,tocIndex:28},{value:"Variants of selector",paraId:2,tocIndex:28},{value:"outlined",paraId:2,tocIndex:28},{value:", ",paraId:2,tocIndex:28},{value:"borderless",paraId:2,tocIndex:28},{value:", ",paraId:2,tocIndex:28},{value:"filled",paraId:2,tocIndex:28},{value:"outlined",paraId:2,tocIndex:28},{value:"virtual",paraId:2,tocIndex:28},{value:"Disable virtual scroll when set to false",paraId:2,tocIndex:28},{value:"boolean",paraId:2,tocIndex:28},{value:"true",paraId:2,tocIndex:28},{value:"onBlur",paraId:2,tocIndex:28},{value:"Called when blur",paraId:2,tocIndex:28},{value:"function",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"onChange",paraId:2,tocIndex:28},{value:"Called when select an option or input value change",paraId:2,tocIndex:28},{value:"function(value, option:Option, Array<Option>)",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"onClear",paraId:2,tocIndex:28},{value:"Called when clear",paraId:2,tocIndex:28},{value:"function",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"4.6.0",paraId:2,tocIndex:28},{value:"onDeselect",paraId:2,tocIndex:28},{value:"Called when an option is deselected, param is the selected option's value. Only called for ",paraId:2,tocIndex:28},{value:"multiple",paraId:2,tocIndex:28},{value:" or ",paraId:2,tocIndex:28},{value:"tags",paraId:2,tocIndex:28},{value:", effective in multiple or tags mode only",paraId:2,tocIndex:28},{value:"function(value: string, number)",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"onFocus",paraId:2,tocIndex:28},{value:"Called when focus",paraId:2,tocIndex:28},{value:"function",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"onInputKeyDown",paraId:2,tocIndex:28},{value:"Called when key pressed",paraId:2,tocIndex:28},{value:"function",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"onMouseEnter",paraId:2,tocIndex:28},{value:"Called when mouse enter",paraId:2,tocIndex:28},{value:"function",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"onMouseLeave",paraId:2,tocIndex:28},{value:"Called when mouse leave",paraId:2,tocIndex:28},{value:"function",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"onPopupOpenChange",paraId:2,tocIndex:28},{value:"Called when dropdown open",paraId:2,tocIndex:28},{value:"function(open)",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"onPopupScroll",paraId:2,tocIndex:28},{value:"Called when dropdown scrolls",paraId:2,tocIndex:28},{value:"function",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"onSearch",paraId:2,tocIndex:28},{value:"Callback function that is fired when input changed",paraId:2,tocIndex:28},{value:"function(value: string)",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"onSelect",paraId:2,tocIndex:28},{value:"Called when an option is selected, the params are option's value (or key) and option instance",paraId:2,tocIndex:28},{value:"function(value: string, number, option: Option)",paraId:2,tocIndex:28},{value:"-",paraId:2,tocIndex:28},{value:"Note, if you find that the drop-down menu scrolls with the page, or you need to trigger Select in other popup layers, please try to use ",paraId:6,tocIndex:28},{value:"getPopupContainer={triggerNode => triggerNode.parentElement}",paraId:6,tocIndex:28},{value:" to fix the drop-down popup rendering node in the parent element of the trigger .",paraId:6,tocIndex:28},{value:"interface FileNames {\n  value?: string;\n  label?: string;\n  groupLabel?: string;\n  options?: string;\n  disabled?: string;\n}\n",paraId:7,tocIndex:29},{value:"Name",paraId:8,tocIndex:30},{value:"Description",paraId:8,tocIndex:30},{value:"Version",paraId:8,tocIndex:30},{value:"blur()",paraId:8,tocIndex:30},{value:"Remove focus",paraId:8,tocIndex:30},{value:"focus()",paraId:8,tocIndex:30},{value:"Get focus",paraId:8,tocIndex:30},{value:"tags",paraId:9},{value:"It's caused by option with different ",paraId:10,tocIndex:33},{value:"label",paraId:10,tocIndex:33},{value:" and ",paraId:10,tocIndex:33},{value:"value",paraId:10,tocIndex:33},{value:". You can use ",paraId:10,tocIndex:33},{value:'optionFilterProp="label"',paraId:10,tocIndex:33},{value:" to change filter logic instead.",paraId:10,tocIndex:33},{value:"You can control it by ",paraId:11,tocIndex:34},{value:"open",paraId:11,tocIndex:34},{value:" prop.",paraId:11,tocIndex:34},{value:"popupRender",paraId:9},{value:"Select will close when it lose focus. You can prevent event to handle this:",paraId:12,tocIndex:35},{value:"<Select\n  popupRender={() => (\n    <div\n      onMouseDown={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n      }}\n    >\n      Some Content\n    </div>\n  )}\n/>\n",paraId:13,tocIndex:35},{value:"Virtual scroll internal set item height as ",paraId:14,tocIndex:36},{value:"36px",paraId:14,tocIndex:36},{value:". You need to adjust ",paraId:14,tocIndex:36},{value:"listItemHeight",paraId:14,tocIndex:36},{value:" when your option height is less and ",paraId:14,tocIndex:36},{value:"listHeight",paraId:14,tocIndex:36},{value:" config list container height:",paraId:14,tocIndex:36},{value:"<Select listItemHeight={10} listHeight={250} />\n",paraId:15,tocIndex:36},{value:"Note: ",paraId:16,tocIndex:36},{value:"listItemHeight",paraId:16,tocIndex:36},{value:" and ",paraId:16,tocIndex:36},{value:"listHeight",paraId:16,tocIndex:36},{value:" are internal props. Please only modify when necessary.",paraId:16,tocIndex:36},{value:"aria-",paraId:9},{value:"Select only create a11y auxiliary node when operating on. Please open Select and retry. For ",paraId:17,tocIndex:37},{value:"aria-label",paraId:17,tocIndex:37},{value:" & ",paraId:17,tocIndex:37},{value:"aria-labelledby",paraId:17,tocIndex:37},{value:" miss warning, please add related prop to Select with your own requirement.",paraId:17,tocIndex:37},{value:"Default virtual scrolling will create a mock element to simulate an accessible binding. If a screen reader needs to fully access the entire list, you can set ",paraId:18,tocIndex:37},{value:"virtual={false}",paraId:18,tocIndex:37},{value:" to disable virtual scrolling and the accessibility option will be bound to the actual element.",paraId:18,tocIndex:37}]}}]);