"use strict";(self.webpackChunkmetis_ui=self.webpackChunkmetis_ui||[]).push([[1348],{4060:function(e,a,s){s.r(a);s(37496),s(82857),s(91238),s(83120),s(48415),s(95300),s(11024),s(65110),s(10006),s(18637),s(741),s(30166);var t=s(91512),r=s(35055),l=s(30158),n=s(39546),d=s(30659),u=s(74132);a.default=function(){return(0,u.jsx)(r.DumiPage,{children:(0,u.jsx)(n.Suspense,{fallback:(0,u.jsx)(l.Z,{}),children:(0,u.jsx)(u.Fragment,{children:(0,u.jsxs)("div",{className:"markdown",children:[(0,u.jsxs)("p",{children:[d.texts[0].value,(0,u.jsx)("a",{href:"https://mswjs.io/",children:d.texts[1].value}),d.texts[2].value,(0,u.jsx)("a",{href:"https://fakerjs.dev/",children:d.texts[3].value}),d.texts[4].value]}),(0,u.jsxs)("ul",{children:[(0,u.jsxs)("li",{children:[(0,u.jsx)("a",{href:"https://mswjs.io/",children:d.texts[5].value}),d.texts[6].value]}),(0,u.jsxs)("li",{children:[(0,u.jsx)("a",{href:"https://fakerjs.dev/",children:d.texts[7].value}),d.texts[8].value]})]}),(0,u.jsxs)("p",{children:[d.texts[9].value,(0,u.jsx)("code",{children:d.texts[10].value}),d.texts[11].value,(0,u.jsx)("a",{href:"https://mswjs.io/docs/",children:d.texts[12].value}),d.texts[13].value,(0,u.jsx)("a",{href:"https://fakerjs.dev/guide/",children:d.texts[14].value}),d.texts[15].value]}),(0,u.jsxs)("h2",{id:"目录",children:[(0,u.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#目录",children:(0,u.jsx)("span",{className:"icon icon-link"})}),"目录"]}),(0,u.jsx)(t.Z,{children:d.texts[16].value}),(0,u.jsxs)("h2",{id:"添加接口模拟数据",children:[(0,u.jsx)("a",{"aria-hidden":"true",tabIndex:"-1",href:"#添加接口模拟数据",children:(0,u.jsx)("span",{className:"icon icon-link"})}),"添加接口模拟数据"]}),(0,u.jsxs)("p",{children:[d.texts[17].value,(0,u.jsx)("code",{children:d.texts[18].value}),d.texts[19].value,(0,u.jsx)("code",{children:d.texts[20].value}),d.texts[21].value]}),(0,u.jsx)(t.Z,{title:"src/mocks/handlers/faker-list.ts",lang:"ts",children:d.texts[22].value}),(0,u.jsxs)("p",{children:[d.texts[23].value,(0,u.jsx)("code",{children:d.texts[24].value}),d.texts[25].value]}),(0,u.jsx)(t.Z,{title:"src/mocks/handlers/index.ts",lang:"ts",highlightLines:[2,6],children:d.texts[26].value}),(0,u.jsxs)("p",{children:[d.texts[27].value,(0,u.jsx)("code",{children:d.texts[28].value}),d.texts[29].value]})]})})})})}},30659:function(e,a,s){s.r(a),s.d(a,{texts:function(){return t}});const t=[{value:"本项目使用 ",paraId:0},{value:"msw",paraId:0},{value:" 进行接口请求的模拟，并结合 ",paraId:0},{value:"faker-js",paraId:0},{value:" 生成随机数据，方便开发和测试。",paraId:0},{value:"msw",paraId:1},{value:": Mock Service Worker，拦截并模拟网络请求，支持 REST 和 GraphQL。",paraId:1},{value:"faker-js",paraId:1},{value:": 用于生成各种类型的假数据，如姓名、地址、图片等。",paraId:1},{value:"你可以在 ",paraId:2},{value:"mocks",paraId:2},{value:" 目录下查看具体实现方式，或参考 ",paraId:2},{value:"官方文档",paraId:2},{value:" 和 ",paraId:2},{value:"faker-js 文档",paraId:2},{value:" 了解更多用法。",paraId:2},{value:"├── mocks\n│   ├── handlers           # 存放所有的请求处理器\n│   │   ├── index.ts       # 处理器入口文件，统一导出各模块处理器\n│   │   └── user.ts        # 用户相关的 mock 接口处理器\n│   └── browser.ts         # 配置并启动 mock 服务的入口文件\n",paraId:3,tocIndex:0},{value:"在 ",paraId:4,tocIndex:1},{value:"src/mocks/handlers",paraId:4,tocIndex:1},{value:" 目录下创建文件 ",paraId:4,tocIndex:1},{value:"faker-list.ts",paraId:4,tocIndex:1},{value:"。",paraId:4,tocIndex:1},{value:"import { faker } from '@faker-js/faker';\nimport { delay, http, HttpResponse } from 'msw';\nimport type { CurrentUser } from '@/types/user';\nimport type { UserPermissions } from '@/utils/auth';\n\nconst userHandles = [\n  http.get('/api/faker-list', async ({ request }) => {\n    await delay(600);\n\n    return HttpResponse.json({\n      success: true,\n      data: [\n        /* 模拟数据，你可以通过faker-js来生成 */\n      ],\n    });\n  }),\n];\n\nexport default userHandles;\n",paraId:5,tocIndex:1},{value:"在 ",paraId:6,tocIndex:1},{value:"src/mocks/handlers/index.ts",paraId:6,tocIndex:1},{value:" 中引用文件。",paraId:6,tocIndex:1},{value:"import fakerListHandlers from './faker-list';\nimport userHandlers from './user';\n\nexport default [\n  ...userHandlers,\n  ...fakerListHandlers\n];\n",paraId:7,tocIndex:1},{value:"现在当发送 ",paraId:8,tocIndex:1},{value:"[GET]/api/faker-list",paraId:8,tocIndex:1},{value:" 请求时就会被拦截了。",paraId:8,tocIndex:1}]}}]);